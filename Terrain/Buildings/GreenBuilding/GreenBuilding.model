# Made using Asset Forge (1.3)

:models
Buildings/block[(0, 0, 0);(0.0, 270.0, 0.0);(13.0, 9.0, 13.0);block_46;border+bricks]
Buildings/window_width[(-7, 2, 4);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_47;element+glass]
Buildings/window_width[(-7, 2, 3);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_48;element+glass]
Buildings/window_width[(-7, 2, 2);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_49;element+glass]
Buildings/window_width[(-7, 2, 1);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_50;element+glass]
Buildings/window_width[(-7, 2, 0);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_51;element+glass]
Buildings/window_width[(-7, 2, -1);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_52;element+glass]
Buildings/window_width[(-7, 2, -4);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_53;element+glass]
Buildings/window_width[(-7, 2, -3);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_54;element+glass]
Buildings/window_width[(-7, 2, -2);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_55;element+glass]
Buildings/window_width[(-7, 5, 4);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_56;element+glass]
Buildings/window_width[(-7, 5, 3);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_57;element+glass]
Buildings/window_width[(-7, 5, 2);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_58;element+glass]
Buildings/window_width[(-7, 5, 1);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_59;element+glass]
Buildings/window_width[(-7, 5, 0);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_60;element+glass]
Buildings/window_width[(-7, 5, -1);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_61;element+glass]
Buildings/window_width[(-7, 5, -2);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_62;element+glass]
Buildings/window_width[(-7, 5, -3);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_63;element+glass]
Buildings/window_width[(-7, 5, -4);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_64;element+glass]
Buildings/window_width[(-7, 7, -4);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_65;element+glass]
Buildings/window_width[(-7, 7, -3);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_66;element+glass]
Buildings/window_width[(-7, 7, -2);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_67;element+glass]
Buildings/window_width[(-7, 7, -1);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_68;element+glass]
Buildings/window_width[(-7, 7, 0);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_69;element+glass]
Buildings/window_width[(-7, 7, 1);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_70;element+glass]
Buildings/window_width[(-7, 7, 2);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_71;element+glass]
Buildings/window_width[(-7, 7, 3);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_72;element+glass]
Buildings/window_width[(-7, 7, 4);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_73;element+glass]
Buildings/window_width[(-7, 7, 5);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_74;element+glass]
Buildings/window_width[(-7, 5, 5);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_75;element+glass]
Buildings/window_width[(-7, 2, 5);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_76;element+glass]
Buildings/window_width[(-7, 2, -5);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_77;element+glass]
Buildings/window_width[(-7, 5, -5);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_78;element+glass]
Buildings/window_width[(-7, 7, -5);(0.0, 0.0, 0.0);(1.0, 1.0, 1.0);window_width_79;element+glass]
Buildings/window_width[(-5, 7, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_80;element+glass]
Buildings/window_width[(-5, 5, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_81;element+glass]
Buildings/window_width[(-5, 2, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_82;element+glass]
Buildings/window_width[(-4, 2, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_83;element+glass]
Buildings/window_width[(-3, 2, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_84;element+glass]
Buildings/window_width[(-2, 2, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_85;element+glass]
Buildings/window_width[(-1, 2, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_86;element+glass]
Buildings/window_width[(0, 2, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_87;element+glass]
Buildings/window_width[(1, 2, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_88;element+glass]
Buildings/window_width[(2, 2, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_89;element+glass]
Buildings/window_width[(3, 2, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_90;element+glass]
Buildings/window_width[(4, 2, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_91;element+glass]
Buildings/window_width[(5, 2, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_92;element+glass]
Buildings/window_width[(5, 5, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_93;element+glass]
Buildings/window_width[(-4, 5, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_94;element+glass]
Buildings/window_width[(-3, 5, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_95;element+glass]
Buildings/window_width[(-2, 5, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_96;element+glass]
Buildings/window_width[(-1, 5, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_97;element+glass]
Buildings/window_width[(0, 5, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_98;element+glass]
Buildings/window_width[(1, 5, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_99;element+glass]
Buildings/window_width[(2, 5, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_100;element+glass]
Buildings/window_width[(3, 5, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_101;element+glass]
Buildings/window_width[(4, 5, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_102;element+glass]
Buildings/window_width[(-4, 7, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_103;element+glass]
Buildings/window_width[(-3, 7, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_104;element+glass]
Buildings/window_width[(-2, 7, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_105;element+glass]
Buildings/window_width[(-1, 7, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_106;element+glass]
Buildings/window_width[(0, 7, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_107;element+glass]
Buildings/window_width[(1, 7, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_108;element+glass]
Buildings/window_width[(2, 7, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_109;element+glass]
Buildings/window_width[(3, 7, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_110;element+glass]
Buildings/window_width[(4, 7, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_111;element+glass]
Buildings/window_width[(5, 7, -7);(0.0, 270.0, 0.0);(1.0, 1.0, 1.0);window_width_112;element+glass]
Buildings/window_width[(7, 2, -5);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_113;element+glass]
Buildings/window_width[(7, 2, -4);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_114;element+glass]
Buildings/window_width[(7, 2, -3);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_115;element+glass]
Buildings/window_width[(7, 2, -2);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_116;element+glass]
Buildings/window_width[(7, 2, -1);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_117;element+glass]
Buildings/window_width[(7, 2, 0);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_118;element+glass]
Buildings/window_width[(7, 2, 1);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_119;element+glass]
Buildings/window_width[(7, 2, 2);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_120;element+glass]
Buildings/window_width[(7, 2, 4);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_121;element+glass]
Buildings/window_width[(7, 2, 5);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_122;element+glass]
Buildings/window_width[(7, 2, 3);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_123;element+glass]
Buildings/window_width[(7, 5, -5);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_124;element+glass]
Buildings/window_width[(7, 5, -4);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_125;element+glass]
Buildings/window_width[(7, 5, -3);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_126;element+glass]
Buildings/window_width[(7, 5, -2);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_127;element+glass]
Buildings/window_width[(7, 5, -1);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_128;element+glass]
Buildings/window_width[(7, 5, 0);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_129;element+glass]
Buildings/window_width[(7, 5, 1);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_130;element+glass]
Buildings/window_width[(7, 5, 2);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_131;element+glass]
Buildings/window_width[(7, 5, 4);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_132;element+glass]
Buildings/window_width[(7, 5, 5);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_133;element+glass]
Buildings/window_width[(7, 5, 3);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_134;element+glass]
Buildings/window_width[(7, 7, -5);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_135;element+glass]
Buildings/window_width[(7, 7, -4);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_136;element+glass]
Buildings/window_width[(7, 7, -3);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_137;element+glass]
Buildings/window_width[(7, 7, -2);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_138;element+glass]
Buildings/window_width[(7, 7, -1);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_139;element+glass]
Buildings/window_width[(7, 7, 0);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_141;element+glass]
Buildings/window_width[(7, 7, 1);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_142;element+glass]
Buildings/window_width[(7, 7, 2);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_143;element+glass]
Buildings/window_width[(7, 7, 3);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_144;element+glass]
Buildings/window_width[(7, 7, 4);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_145;element+glass]
Buildings/window_width[(7, 7, 5);(0.0, 180.0, 0.0);(1.0, 1.0, 1.0);window_width_146;element+glass]
Buildings/window_width[(5, 7, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_147;element+glass]
Buildings/window_width[(4, 7, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_148;element+glass]
Buildings/window_width[(3, 7, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_149;element+glass]
Buildings/window_width[(2, 7, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_150;element+glass]
Buildings/window_width[(1, 7, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_151;element+glass]
Buildings/window_width[(0, 7, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_152;element+glass]
Buildings/window_width[(-2, 7, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_153;element+glass]
Buildings/window_width[(-1, 7, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_154;element+glass]
Buildings/window_width[(-3, 7, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_155;element+glass]
Buildings/window_width[(-4, 7, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_156;element+glass]
Buildings/window_width[(-5, 7, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_157;element+glass]
Buildings/window_width[(5, 5, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_158;element+glass]
Buildings/window_width[(4, 5, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_159;element+glass]
Buildings/window_width[(3, 5, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_160;element+glass]
Buildings/window_width[(2, 5, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_161;element+glass]
Buildings/window_width[(1, 5, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_162;element+glass]
Buildings/window_width[(0, 5, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_163;element+glass]
Buildings/window_width[(-1, 5, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_164;element+glass]
Buildings/window_width[(-3, 5, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_165;element+glass]
Buildings/window_width[(-2, 5, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_166;element+glass]
Buildings/window_width[(-4, 5, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_167;element+glass]
Buildings/window_width[(-5, 5, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_168;element+glass]
Buildings/window_width[(5, 2, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_169;element+glass]
Buildings/window_width[(4, 2, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_170;element+glass]
Buildings/window_width[(3, 2, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_171;element+glass]
Buildings/window_width[(2, 2, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_172;element+glass]
Buildings/window_width[(1, 2, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_173;element+glass]
Buildings/window_width[(0, 2, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_174;element+glass]
Buildings/window_width[(-2, 2, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_175;element+glass]
Buildings/window_width[(-1, 2, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_176;element+glass]
Buildings/window_width[(-3, 2, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_177;element+glass]
Buildings/window_width[(-5, 2, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_178;element+glass]
Buildings/window_width[(-4, 2, 7);(0.0, 90.0, 0.0);(1.0, 1.0, 1.0);window_width_179;element+glass]

:materials
border[RGBA(0.501, 1.000, 0.376, 1.000);cobble]
bricks[RGBA(0.477, 0.886, 0.341, 1.000);cobble]
element[RGBA(0.945, 0.949, 0.965, 1.000);]
glass[RGBA(0.298, 0.314, 0.365, 1.000);]

:textures

:extra
